@using LibraryManagementApp.Enums;
@model PaginatedList<BookInstance>


@{
    ViewData["Title"] = "View Book Inventory";
    var viewData = new ViewDataDictionary(ViewData);
    viewData["Param1"] = ViewBag.searcheditem;
    viewData["actionPage"] = "Index";
}

<div class="row">
    <h4 class="mt-3 mb-4 text-center"><i class="bi bi-archive"></i> Inventory</h4>
    <div class="col-md-8 offset-2 mb-3">
        <div class="row">
            <div class="col">
                @using (Html.BeginForm("Index", "BookInstance", FormMethod.Get))
                {
                    <div class="row">
                        <div class="col-md-7">
                            <input name="searchString" id="searchedString" class=" form-control" type="search" placeholder="Filter by Book title ...">
                        </div>
                        <div class="col">
                            <input class="btn btn-light float-start" value="Filter" type="submit">
                        </div>
                    </div>
                }
            </div>
            <div class="col">
                <a class="btn btn-light float-end" asp-action="Index">All</a>
            </div>
        </div>
    </div>
    <div class="col-md-8 offset-2">
        <table class="table">
            <thead>
                <tr class="text-center">
                    <th>@Html.DisplayNameFor(model => model.First().IsbnNumber)</th>
                    <th>@Html.DisplayNameFor(model => model.First().bookStatus)</th>
                    <th>@Html.DisplayNameFor(model => model.First().bookAvailability)</th>
                    <th>@Html.DisplayNameFor(model => model.First().Book)</th>
                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Librarian")))
                    {
                        <th>Actions</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <!--
                        <td class="text-center">
                            <img class="rounded-circle" src="item.ProfilePicture" alt="item.FullName" style="max-width: 150px" />
                        </td>-->
                        <td class="align-middle text-center">@Html.DisplayFor(modelItem => item.IsbnNumber)</td>
                        <td class="align-middle text-center">@Html.DisplayFor(modelItem => item.bookStatus)</td>
                        <td class="align-middle text-center">@Html.DisplayFor(modelItem => item.bookAvailability)</td>
                        <td class="align-middle text-center">@Html.DisplayFor(modelItem => item.Book!.Title)</td>
                        @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Librarian")))
                        {
                            <td class="align-middle text-center">
                                <a class="btn btn-outline-primary me-2" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-info-circle"></i> Info</a>
                                @if(item.bookAvailability != BookAvailability.Borrowed)
                                {
                                    <a class="btn btn-light me-2" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i> Edit</a>
                                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                                    {
                                        <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash"></i> Delete</a>
                                    }
                                }
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Librarian")))
{
    @await Html.PartialAsync("_CreateItem", "BookInstance")
}

<partial name="_Pager" view-data="viewData"/>

@section scripts
{
    <script>
        $(document).ready(function () {
            $("#searchedString").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Book/GetTitle",
                        type: "POST",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.name, value: item.name };
                            }));
                        }
                    });
                },
                minLength: 3
            });
        });
    </script>
}
