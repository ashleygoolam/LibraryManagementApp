@using LibraryManagementApp.Enums
@model PaginatedList<BookIssue>

@{
    ViewData["Title"] = "Issue a Book";
    var viewData = new ViewDataDictionary(ViewData);
    viewData["Param1"] = ViewBag.searcheditem;
    viewData["actionPage"] = "Index";
}
<div class="row">
    <h4 class="mt-3 mb-4 text-center"><i class="bi bi-journal-arrow-up"></i> Issued Books</h4>
    <div style="max-width:1200px; margin:auto;">
        <div class="row g-2 mb-3">
            <div class="col">
                @using (Html.BeginForm("Index", "BookIssue", FormMethod.Get))
                {
                    <div class="row">
                        <div class="col-md-7">
                            <input name="searchString" id="searchedString" class=" form-control" type="search" placeholder="Filter by email ...">
                        </div>
                        <div class="col">
                            <input class="btn btn-light float-start" value="Filter" type="submit">
                        </div>
                    </div>
                }
            </div>
            <div class="col">
                <div class="row float-end">
                    <div class="col">
                        <a class="btn btn-light" asp-action="Index">All</a>
                    </div>
                    <div class="col">
                        @using (Html.BeginForm("Index", "BookIssue", FormMethod.Get))
                        {
                            <input name="searchString" type="hidden" value="NotYetReturned" />
                            <input class="btn btn-light float-start" value="Borrowed" type="submit">
                        }
                    </div>
                </div>
            </div>
        </div>
        <table class="table">
            <thead>
                <tr class="text-center">
                    <th>@Html.DisplayNameFor(model => model.First().TimeBorrowed)</th>
                    <th>Borrower</th>
                    <th>Issued By</th>
                    <th>@Html.DisplayNameFor(model => model.First().bookStatus)</th>
                    <th>@Html.DisplayNameFor(model => model.First().BookInstance!.IsbnNumber)</th>
                    @if (User.Identity!.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Librarian")))
                    {
                        @*<th>Fines</th>*@
                        <th>Actions</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="align-middle text-center">@Html.DisplayFor(modelItem => item.TimeBorrowed)</td>
                        <td class="align-middle text-center">@Html.DisplayFor(modelItem => item.BorrowersName)</td>
                        <td class="align-middle text-center">@Html.DisplayFor(modelItem => item.BorrowingLibrariansName)</td>
                        <td class="align-middle text-center">@Html.DisplayFor(modelItem => item.bookStatus)</td>
                        <td class="align-middle text-center">@Html.DisplayFor(modelItem => item.BookInstance!.IsbnNumber)</td>
                        @*<td class="align-middle text-center"><i class="bi bi-x-circle"></i></td>*@
                        <td class="text-center">
                            <a class="btn btn-outline-primary me-2" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-info-circle"></i> Info</a>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                            {
                                <a class="btn btn-light me-2" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i> Edit</a>
                                @if (item.bookReturnStatus != BookReturnStatus.NotYetReturned)
                                {
                                    <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">
                                        <i class="bi bi-trash"></i> Delete
                                    </a>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Librarian")))
{
    @await Html.PartialAsync("_CreateItem", "BookIssue")
}

<partial name="_Pager" view-data="viewData" />

@section scripts{
    <script>
        $(document).ready(function () {
            $("#searchedString").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Account/GetBorrower",
                        type: "POST",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.name, value: item.name };
                            }));
                        }
                    });
                },
                minLength: 5
            });
        });
    </script>
}